## AIVEN ONLINE MYSQL Database Configuration
#spring.datasource.url = jdbc:mysql://avnadmin:AVNS_XOS_PIQGLFJw0lGr-4s@mysql-173fb436-immanuelderry31-d375.a.aivencloud.com:24762/defaultdb?ssl-mode=REQUIRED
#spring.datasource.username = avnadmin
#spring.datasource.password = AVNS_XOS_PIQGLFJw0lGr-4s
#spring.datasource.driver-class = com.cj.jdbc.driver
#server.port = 24762




# AWS ONLINE MYSQL Database Configuration
spring.datasource.url = jdbc:mysql://examsdb.cp26gui2amit.eu-north-1.rds.amazonaws.com:3306/examinationDB
spring.datasource.username = root
spring.datasource.password = EMMARESCUe12
spring.datasource.driver-class = com.cj.jdbc.driver


## FREE HOSTINGNOADD

#spring.datasource.url = jdbc:mysql://fdb1027.runhosting.com:3306/4509431_examportal?ssl-mode=REQUIRED
#spring.datasource.username = 4509431_examportal
#spring.datasource.password = EMMARESCUE1
#spring.datasource.driver-class = com.mysql.cj.jdbc.Driver
#server.port = 3306
##
##jpa Configuration
##spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.dialect =  org.hibernate.dialect.MySQLDialect
#spring.jpa.hibernate.ddl-auto= update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

## OPENAI KEY (My own)
##openai.api.key=sk-proj-ixlWbpItW3ozBEr2xXOGT3BlbkFJ6bPhOQQCefDQVHl1j4ky

openai.api.key=sk-proj-XFYRZABc2KqnZQ5LZzSnT3BlbkFJDcCkLQfvpAktdZd9Hb0r

##GEMINI API KEY


#GOOGLE GEMINI PROPERTIES
google.gemini.api.key=AIzaSyC9uCkkvOIYzV2c2SQwlCy6hGChAEIqWHw
google.gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent





## OFFLINE MYSQL Database Configuration
#spring.datasource.url = jdbc:mysql://localhost:3306/Exam_portal?serverTimezone=UTC
#spring.datasource.username = root
#spring.datasource.password = EMMARESCUE
#spring.datasource.driver-class = com.cj.jdbc.driver
server.port = 9191

#jpa Configuration
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto= update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# oauth2 client configurations
#google configure
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=1006167054424-vgf13e2d85q918umpdku10un40613m1v.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile


spring.security.oauth2.resourceserver.opaque-token.clientId=1006167054424-vgf13e2d85q918umpdku10un40613m1v.apps.googleusercontent.com
spring.security.oauth2.resourceserver.opaque-token.clientSecret=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
spring.security.oauth2.resourceserver.opaque-token.introspect-uri=https://www.googleapis.com



# CLOUDINARY CONFIGURATIONS
cloudinary.cloud.name=dchrz8cke
cloudinary.api.key=686835576247458
cloudinary.api.secret=h1dTzmYd55kb-btsC_tlCvxJ8lU



spring.profiles.active=dev


# SENDING EMAIL PROPERTIES
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=emmanuelderryshare@gmail.com
spring.mail.password=xkgafkycoljlxvew
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
mail.smtp.debug=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.prope rties.mail.smtp.writetimeout=5000